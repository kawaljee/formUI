{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","data/Dummy.js","services/employeeService.js","pages/Students/AddStudentForm.js","components/PageHeader.js","pages/Students/AddStudent.js","pages/Students/EditStudentForm.js","components/useTable.js","components/Popup.js","pages/Students/ViewStudents.js","Routes.js","App/App.js","serviceWorker.js","index.js","assets/university.png"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","textAlign","large","labelColor","color","fontWeight","props","classes","className","Grid","container","alignItems","item","Avatar","alt","src","logo","useStyles","makeStyles","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","isActive","history","path","location","pathname","withRouter","AppBar","Toolbar","style","to","sm","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","key","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","ActionButton","children","useForm","initialFValues","validateOnChange","validate","useState","values","setValues","errors","setErrors","handleInputChange","resetForm","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","updateEmployee","recordIndex","findIndex","x","parse","departments","department","departmentId","genderItems","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","fieldValues","temp","test","length","Object","every","onSubmit","preventDefault","employeeService","xs","type","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","subTitle","icon","Paper","elevation","square","Card","Typography","component","pageContent","Employees","studentService","setRecords","recordForEdit","addOrEdit","employee","console","log","EditStudentForm","useEffect","table","marginTop","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","flexGrow","DialogContent","dividers","newButton","right","setRecordForEdit","setFilterFn","InputProps","startAdornment","InputAdornment","Search","filter","toLowerCase","includes","startIcon","TableBody","openInPopup","Routes","exact","AddStudent","ViewStudent","createMuiTheme","background","default","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","appMain","App","rootReducer","combineReducers","student","StudentReducer","store","createStore","applyMiddleware","ReduxThunk","ThemeProvider","CssBaseline","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.05a75c88.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, withStyles, Avatar, Grid } from \"@material-ui/core\";\nimport logo from '../assets/university.png'\n\n// withStyles & makeStyles\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: '0px',\n        width: '250px',\n        height: '100%',\n        backgroundColor: '#253053',\n        textAlign: 'center',\n\n    },\n\n    large: {\n        height: '200px',\n        width: '200px',\n        \n\n\n\n    },\n\n    labelColor: {\n        color: '#fff',\n        fontWeight: '200px'\n\n    }\n}\n\nconst SideMenu = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.sideMenu}>\n            <Grid container\n                alignItems=\"center\">\n                <Grid item>\n                    <Avatar alt=\"Remy Sharp\" src={logo} className={classes.large} />\n                    <label className={classes.labelColor}>University</label>\n                </Grid>\n            </Grid>\n\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);\n","import React from 'react'\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, makeStyles } from '@material-ui/core'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport {Link ,withRouter } from 'react-router-dom';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fff',\n\n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#f2f2f2'\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}))\n\nconst isActive = (history, path) => {\n    if (history.location.pathname === path) {\n        return { color: \"#333996\" };\n    } else {\n        return { color: \"#6e6e6e\" };\n    }\n};\n\nfunction Header({history}) {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container\n                    alignItems=\"center\">\n                    <Grid item>\n                        {/* <InputBase\n                            placeholder=\"Search topics\"\n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        /> */}\n                         <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/\")}\n                    to=\"/\"\n                >\n                    Student Registration\n                </Link>\n\n                    </Grid>\n                    <Grid item>\n                        {/* <InputBase\n                            placeholder=\"Search topics\"\n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        /> */}\n                         <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/view-students\")}\n                    to=\"/view-students\"\n                >\n                    View Students \n                </Link>\n\n                    </Grid>\n                    <Grid item sm></Grid>\n                    <Grid item>\n                        {/* <IconButton>\n                            <Badge badgeContent={2} color=\"secondary\">\n                                <NotificationsNoneIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <Badge badgeContent={3} color=\"primary\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <PowerSettingsNewIcon fontSize=\"small\" />\n                        </IconButton> */}\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default withRouter(Header);","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 0,\n        margin: theme.spacing(0.5)\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.secondary.main,\n        }\n    },\n    primary: {\n        backgroundColor: theme.palette.primary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.primary.main,\n        }\n    },\n}))\n\nexport default function ActionButton(props) {\n\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <Button\n            className={`${classes.root} ${classes[color]}`}\n            onClick={onClick}>\n            {children}\n        </Button>\n    )\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, ...other } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n","import React from 'react'\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nexport default function RadioGroup(props) {\n\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\n\nexport default function Select(props) {\n\n    const { name, label, value,error=null, onChange, options } = props;\n\n    return (\n        <FormControl variant=\"outlined\"\n        {...(error && {error:true})}>\n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}>\n                <MenuItem value=\"\">None</MenuItem>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                    )\n                }\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function DatePicker(props) {\n\n    const { name, label, value, onChange } = props\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\n                label={label}\n                format=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\n\n            />\n        </MuiPickersUtilsProvider>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n        if (validateOnChange)\n            validate({ [name]: value })\n    }\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n\n    }\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '80%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport function Form(props) {\n\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}\n\n","export const data=[{\r\n    \"id\": 1,\r\n    \"fullName\": \"avinash\",\r\n    \"email\": \"avinas@gmail.com\",\r\n    \"mobile\": \"9901331653\",\r\n    \"city\": \"bokaro\",\r\n    \"gender\": \"male\",\r\n    \"departmentId\": \"1\",\r\n    \"hireDate\": \"2020-08-21T08:25:34.182Z\",\r\n    \"isPermanent\": true,\r\n    \"department\": \"Development\"\r\n},\r\n{\r\n    \"id\": 2,\r\n    \"fullName\": \"kawal\",\r\n    \"email\": \"kawal@gmail.com\",\r\n    \"mobile\": \"9901331653\",\r\n    \"city\": \"jsr\",\r\n    \"gender\": \"male\",\r\n    \"departmentId\": \"1\",\r\n    \"hireDate\": \"2020-08-21T08:25:34.182Z\",\r\n    \"isPermanent\": false,\r\n    \"department\": \"Development\"\r\n},\r\n{\r\n    \"id\": 3,\r\n    \"fullName\": \"swati kumari\",\r\n    \"email\": \"swati@gmail.com\",\r\n    \"mobile\": \"7257031137\",\r\n    \"city\": \"ranchi\",\r\n    \"gender\": \"male\",\r\n    \"departmentId\": \"2\",\r\n    \"hireDate\": \"2020-08-21T09:46:46.849Z\",\r\n    \"isPermanent\": false,\r\n    \"department\": \"Marketing\"\r\n},\r\n{\r\n    \"id\": 4,\r\n    \"fullName\": \"shyam\",\r\n    \"email\": \"sundar@gmail.com\",\r\n    \"mobile\": \"7894561230\",\r\n    \"city\": \"bangalore\",\r\n    \"gender\": \"male\",\r\n    \"departmentId\": \"1\",\r\n    \"hireDate\": \"2020-08-21T10:59:48.167Z\",\r\n    \"isPermanent\": false,\r\n    \"department\": \"Development\"\r\n}];","import {data} from '../data/Dummy';\nimport ActionButton from '../components/controls/ActionButton';\n// const KEYS = {\n//     employees: 'employees',\n//     employeeId: 'employeeId'\n// }\n\n// export const getDepartmentCollection = () => ([\n//     { id: '1', title: 'Development' },\n//     { id: '2', title: 'Marketing' },\n//     { id: '3', title: 'Accounting' },\n//     { id: '4', title: 'HR' },\n// ])\n\n// export function insertEmployee(data) {\n//     let employees = getAllEmployees();\n//     data['id'] = generateEmployeeId()\n//     employees.push(data)\n//     localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n// }\n\n// export function updateEmployee(data) {\n//     let employees = getAllEmployees();\n//     let recordIndex = employees.findIndex(x => x.id == data.id);\n//     employees[recordIndex] = { ...data }\n//     localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n// }\n\n// export function generateEmployeeId() {\n//     if (localStorage.getItem(KEYS.employeeId) == null)\n//         localStorage.setItem(KEYS.employeeId, '0')\n//     var id = parseInt(localStorage.getItem(KEYS.employeeId))\n//     localStorage.setItem(KEYS.employeeId, (++id).toString())\n//     return id;\n// }\n\n// export function getAllEmployees() {\n//     //if (localStorage.getItem(KEYS.employees) == null)\n//     // localStorage.setItem(KEYS.employees, JSON.stringify([]))\n//     Action.getStudents()\n//     let employees = data;\n//     //map departmentID to department title\n//     let departments = getDepartmentCollection();\n//     return employees.map(x => ({\n//         ...x,\n//         department: departments[x.departmentId - 1].title\n//     }))\n// }\n\nconst KEYS = {\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\n\nexport const getDepartmentCollection = () => ([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    { id: '4', title: 'HR' },\n])\n\nexport function insertEmployee(data) {\n    let employees = getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map(x => ({\n        ...x,\n        department: departments[x.departmentId - 1].title\n    }))\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm() {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()){\r\n            employeeService.insertEmployee(values)\r\n            resetForm()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff'\n    },\n    pageHeader:{\n        padding:theme.spacing(4),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'inline-block',\n        padding:theme.spacing(2),\n        color:'#3c44b1'\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n}))\n\nexport default function PageHeader(props) {\n\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                    <Typography\n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n}\n","import React, {useState} from 'react'\nimport StudentForm from \"./AddStudentForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport { Paper,makeStyles } from '@material-ui/core';\nimport Header from '../../components/Header';\nimport * as studentService from \"../../services/employeeService\";\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3)\n    }\n}))\n\n\n\nexport default function Employees() {\n    const [records, setRecords] = useState(studentService.getAllEmployees())\n    const classes = useStyles();\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            studentService.insertEmployee(employee)\n        else{\n            studentService.updateEmployee(employee)\n            console.log(\"employeeeeeeeeeeeee\", employee)\n        }\n            \n        resetForm()\n        setRecords(studentService.getAllEmployees())\n    }\n\n    return (\n        <>\n        <Header/>\n            <PageHeader\n                title=\"New Employee\"\n                subTitle=\"Form design with validation\"\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\n            />\n            <Paper className={classes.pageContent}>\n                <StudentForm \n                 recordForEdit={null}\n                 addOrEdit={addOrEdit} />\n            </Paper>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\n\n\nconst genderItems = [\n    { id: 'male', title: 'Male' },\n    { id: 'female', title: 'Female' },\n    { id: 'other', title: 'Other' },\n]\n\nconst initialFValues = {\n    id: 0,\n    fullName: '',\n    email: '',\n    mobile: '',\n    city: '',\n    gender: 'male',\n    departmentId: '',\n    hireDate: new Date(),\n    isPermanent: false,\n}\n\nexport default function EditStudentForm(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\n        if ('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    <Controls.Input\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        error={errors.mobile}\n                    />\n                    <Controls.Input\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                    />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n","import React, { useState } from 'react'\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records, headCells,filterFn) {\n\n    const classes = useStyles();\n\n    const pages = [5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\n    const [order, setOrder] = useState()\n    const [orderBy, setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {\n                    headCells.map(headCell => (\n                        <TableCell key={headCell.id}\n                            sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting ? headCell.label :\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\n                                    {headCell.label}\n                                </TableSortLabel>\n                            }\n                        </TableCell>))\n                }\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10))\n        setPage(0);\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\"\n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\nimport Controls from \"./controls/Controls\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle: {\n        paddingRight: '0px'\n    }\n}))\n\nexport default function Popup(props) {\n\n    const { title, children, openPopup, setOpenPopup } = props;\n    const classes = useStyles();\n\n    return (\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{ display: 'flex' }}>\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n                        {title}\n                    </Typography>\n                    <Controls.ActionButton\n                        color=\"secondary\"\n                        onClick={()=>{setOpenPopup(false)}}>\n                        <CloseIcon />\n                    </Controls.ActionButton>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>\n                {children}\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport EditStudentForm from \"./EditStudentForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from \"../../components/useTable\";\nimport * as studentService from \"../../services/employeeService\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from \"../../components/Popup\";\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Header from '../../components/Header';\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3)\n    },\n    searchInput: {\n        width: '75%'\n    },\n    newButton: {\n        position: 'absolute',\n        right: '10px'\n    }\n}))\n\n\nconst headCells = [\n    { id: 'fullName', label: 'Student Name' },\n    { id: 'email', label: 'Email Address (Personal)' },\n    { id: 'mobile', label: 'Mobile Number' },\n    { id: 'department', label: 'Department' },\n    { id: 'actions', label: 'Actions', disableSorting: true }\n]\n\nexport default function Employees() {\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records, setRecords] = useState(studentService.getAllEmployees())\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false)\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if (target.value == \"\")\n                    return items;\n                else\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            studentService.insertEmployee(employee)\n        else{\n            studentService.updateEmployee(employee)\n            console.log(\"employeeeeeeeeeeeee\", employee)\n        }\n            \n        resetForm()\n        setRecordForEdit(null)\n        setOpenPopup(false)\n        setRecords(studentService.getAllEmployees())\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    return (\n        <>\n            <Header />\n            <PageHeader\n                title=\"New Student\"\n                subTitle=\"Form design with validation for student registration\"\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\n            />\n            <Paper className={classes.pageContent}>\n\n                <Toolbar>\n                    <Controls.Input\n                        label=\"Search Students\"\n                        className={classes.searchInput}\n                        InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\">\n                                <Search />\n                            </InputAdornment>)\n                        }}\n                        onChange={handleSearch}\n                    />\n                    <Controls.Button\n                        text=\"Add New\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon />}\n                        className={classes.newButton}\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\n                    />\n                </Toolbar>\n                <TblContainer>\n                    <TblHead />\n                    <TableBody>\n                        {\n                            recordsAfterPagingAndSorting().map(item =>\n                                (<TableRow key={item.id}>\n                                    <TableCell>{item.fullName}</TableCell>\n                                    <TableCell>{item.email}</TableCell>\n                                    <TableCell>{item.mobile}</TableCell>\n                                    <TableCell>{item.department}</TableCell>\n                                    <TableCell>\n                                        <Controls.ActionButton\n                                            color=\"primary\"\n                                            onClick={() => { openInPopup(item) }}>\n                                            <EditOutlinedIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                        <Controls.ActionButton\n                                            color=\"secondary\">\n                                            <CloseIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                    </TableCell>\n                                </TableRow>)\n                            )\n                        }\n                    </TableBody>\n                </TblContainer>\n                <TblPagination />\n            </Paper>\n            <Popup\n                title=\"Student Form\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <EditStudentForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit} />\n            </Popup>\n        </>\n    )\n}\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport AddStudent from './pages/Students/AddStudent';\r\n\r\nimport ViewStudent from './pages/Students/ViewStudents';\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                {/* <Route path=\"/\" exact component={Home} /> */}\r\n                <Route path=\"/\" exact component={AddStudent} />\r\n                <Route path=\"/view-students\" exact component={ViewStudent} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport SideMenu from \"../components/SideMenu\";\n\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from \"../components/Header\";\nimport Routes from \"../Routes\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport StudentReducer from '../store/reducer/studentReducer';\n\n\nimport Employees from \"../pages/Students/ViewStudents\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526'\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n  overrides:{\n    MuiAppBar:{\n      root:{\n        transform:'translateZ(0)'\n      }\n    }\n  },\n  props:{\n    MuiIconButton:{\n      disableRipple:true\n    }\n  }\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '250px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  const rootReducer = combineReducers({\n    student: StudentReducer,\n  });\n  \n  const store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n  \n\n    \n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n       \n        <Provider store={store}>\n        <Routes />\n        </Provider>\n       \n        \n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/university.f57984fd.png\";"],"sourceRoot":""}